// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethereum

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BasinStorageDealInfo is an auto generated low-level Go binding around an user-defined struct.
type BasinStorageDealInfo struct {
	Id           uint64
	SelectorPath string
}

// CommonTypesBigInt is an auto generated low-level Go binding around an user-defined struct.
type CommonTypesBigInt struct {
	Val []byte
	Neg bool
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"errorCode\",\"type\":\"int256\"}],\"name\":\"ActorError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ActorNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"DealEpochAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailToCallActor\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"InvalidCodec\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidResponseLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NotEnoughBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PubAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PubDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"DealAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PubCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUB_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"selectorPath\",\"type\":\"string\"}],\"internalType\":\"structBasinStorage.DealInfo[]\",\"name\":\"deals\",\"type\":\"tuple[]\"}],\"name\":\"addDeals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"}],\"name\":\"createPub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealActivation\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealClient\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealClientCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"neg\",\"type\":\"bool\"}],\"internalType\":\"structCommonTypes.BigInt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealLabel\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealProvider\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealProviderCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"neg\",\"type\":\"bool\"}],\"internalType\":\"structCommonTypes.BigInt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealTerm\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealTotalPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"neg\",\"type\":\"bool\"}],\"internalType\":\"structCommonTypes.BigInt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"}],\"name\":\"getOwnerByPub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"latestNDeals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"selectorPath\",\"type\":\"string\"}],\"internalType\":\"structBasinStorage.DealInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"paginatedDeals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"selectorPath\",\"type\":\"string\"}],\"internalType\":\"structBasinStorage.DealInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"pubsOfOwner\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506200001f60003362000025565b620000c6565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000c2576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000813390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b612ed480620000d66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806359b64c5d116100c357806391d148541161007c57806391d148541461035d5780639f29370b14610370578063a217fddf14610383578063a4de7e491461038b578063d06f68021461039e578063d547741f146103b157600080fd5b806359b64c5d146102985780635bf0855e146102b85780636f0a43c7146102e3578063822ba40b146102f657806387a41b811461031d57806389ec0b931461034a57600080fd5b80632f2ff15d116101155780632f2ff15d1461021757806336568abe1461022c5780633c7e59991461023f5780633ff421e91461025f578063484d5a3a1461027257806352b62b3e1461028557600080fd5b806301ffc9a71461015257806306a09dea1461017a578063121e620e146101a5578063248a9ca3146101c657806326294a77146101f7575b600080fd5b6101656101603660046123cc565b6103c4565b60405190151581526020015b60405180910390f35b61018d61018836600461240b565b6103fb565b6040516001600160401b039091168152602001610171565b6101b86101b336600461240b565b610406565b604051610171929190612478565b6101e96101d436600461249c565b60009081526020819052604090206001015490565b604051908152602001610171565b61020a6102053660046124d1565b610427565b60405161017191906124ec565b61022a61022536600461254e565b610516565b005b61022a61023a36600461254e565b610540565b61025261024d36600461240b565b6105c3565b604051610171919061257a565b61016561026d36600461240b565b6105e1565b61025261028036600461240b565b6105ec565b61022a6102933660046125ef565b61060a565b6102ab6102a6366004612641565b610743565b6040516101719190612691565b6102cb6102c636600461270e565b610791565b6040516001600160a01b039091168152602001610171565b6102ab6102f1366004612743565b6107c6565b6101e97fafda658ee731b8f86292e3b52a311534cd93642b12a698012439316e0c3a099581565b61033061032b36600461240b565b610813565b60408051600793840b81529190920b602082015201610171565b61025261035836600461240b565b610821565b61016561036b36600461254e565b61083f565b61033061037e36600461240b565b610868565b6101e9600081565b61022a61039936600461278e565b610876565b61018d6103ac36600461240b565b610a53565b61022a6103bf36600461254e565b610a5e565b60006001600160e01b03198216637965db0b60e01b14806103f557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006103f582610a83565b606060008061041484610ac1565b8051602090910151909590945092505050565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561050b57838290600052602060002001805461047e90612827565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa90612827565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b50505050508152602001906001019061045f565b505050509050919050565b60008281526020819052604090206001015461053181610b0b565b61053b8383610b18565b505050565b6001600160a01b03811633146105b55760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6105bf8282610b9c565b5050565b6040805180820190915260608152600060208201526103f582610c01565b60006103f582610c4b565b6040805180820190915260608152600060208201526103f582610c81565b7fafda658ee731b8f86292e3b52a311534cd93642b12a698012439316e0c3a099561063481610b0b565b60006001600160a01b031660018484604051610651929190612861565b908152604051908190036020019020546001600160a01b03161461068c578282604051635c78f6ed60e11b81526004016105ac929190612871565b836001848460405161069f929190612861565b908152604080516020928190038301902080546001600160a01b0319166001600160a01b0394851617905591861660009081526002825291822080546001810182559083529120016106f2838583612904565b50836001600160a01b0316838360405161070d929190612861565b604051908190038120907ff8debc2f1745eba86909890f2dc061624705c74329348829e04aba43c015b9a290600090a350505050565b6060600060038686604051610759929190612861565b90815260200160405180910390205490508083116107775782610779565b805b925061078786868686610cc0565b9695505050505050565b6000600183836040516107a5929190612861565b908152604051908190036020019020546001600160a01b0316905092915050565b60606000600385856040516107dc929190612861565b90815260200160405180910390205490508083116107fa57826107fc565b805b925061080a85854386610cc0565b95945050505050565b600080600061041484610eef565b6040805180820190915260608152600060208201526103f582610f38565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080600061041484610f77565b7fafda658ee731b8f86292e3b52a311534cd93642b12a698012439316e0c3a09956108a081610b0b565b60004390506000600187876040516108b9929190612861565b908152604051908190036020019020546001600160a01b03169050806108f65786866040516315e6e0eb60e21b81526004016105ac929190612871565b60005b84811015610a495760048888604051610913929190612861565b90815260200160405180910390206000848152602001908152602001600020868683818110610944576109446129c4565b905060200281019061095691906129da565b81546001810183556000928352602090922090916002020161097882826129fa565b50506003888860405161098c929190612861565b90815260405190819003602001902080549060006109a983612b27565b9190505550816001600160a01b031688886040516109c8929190612861565b60405180910390208787848181106109e2576109e26129c4565b90506020028101906109f491906129da565b610a0290602081019061240b565b6001600160401b03167f204834f22022f11eeb78462cfca42c0249cae717b04eba08c0ba32426d750d7060405160405180910390a480610a4181612b27565b9150506108f9565b5050505050505050565b60006103f582610fb5565b600082815260208190526040902060010154610a7981610b0b565b61053b8383610b9c565b600080610a98836001600160401b0316610fe0565b90506000610aae60056307a1f051605185611018565b9050610ab98161103d565b949350505050565b6040805180820190915260608152600060208201526000610aea836001600160401b0316610fe0565b90506000610b0060056302c37386605185611018565b9050610ab981611054565b610b15813361108b565b50565b610b22828261083f565b6105bf576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610b583390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610ba6828261083f565b156105bf576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6040805180820190915260608152600060208201526000610c2a836001600160401b0316610fe0565b90506000610c40600563b2059c49605185611018565b9050610ab9816110e4565b600080610c60836001600160401b0316610fe0565b90506000610c766005639c9ac819605185611018565b9050610ab981611148565b6040805180820190915260608152600060208201526000610caa836001600160401b0316610fe0565b90506000610c40600563ff88e83c605185611018565b6060600080836001600160401b03811115610cdd57610cdd6128a0565b604051908082528060200260200182016040528015610d2357816020015b604080518082019091526000815260606020820152815260200190600190039081610cfb5790505b509050845b84831015610ee257600060048989604051610d44929190612861565b9081526040805191829003602090810183206000868152908252828120805480840286018401909452838552929184015b82821015610e4e576000848152602090819020604080518082019091526002850290910180546001600160401b031682526001810180549293919291840191610dbd90612827565b80601f0160208091040260200160405190810160405280929190818152602001828054610de990612827565b8015610e365780601f10610e0b57610100808354040283529160200191610e36565b820191906000526020600020905b815481529060010190602001808311610e1957829003601f168201915b50505050508152505081526020019060010190610d75565b50505050905060005b8151811015610ec05786851015610ec057818181518110610e7a57610e7a6129c4565b6020026020010151848681518110610e9457610e946129c4565b60200260200101819052508480610eaa90612b27565b9550508080610eb890612b27565b915050610e57565b5081600003610ecf5750610ee2565b81610ed981612b40565b92505050610d28565b5090815295945050505050565b60408051808201909152600080825260208201526000610f17836001600160401b0316610fe0565b90506000610f2d60056309c30b20605185611018565b9050610ab981611156565b6040805180820190915260608152600060208201526000610f61836001600160401b0316610fe0565b90506000610c406005630bf46c57605185611018565b60408051808201909152600080825260208201526000610f9f836001600160401b0316610fe0565b90506000610f2d6005639904f2ff605185611018565b600080610fca836001600160401b0316610fe0565b90506000610aae60056337bc36da605185611018565b60606000610ff6836001600160401b03166111ba565b9050600061100382611208565b905061100f8185611229565b610ab981611235565b606061128080611032878787876000600163ffffffff8816565b979650505050505050565b6000808061104b848261135a565b50949350505050565b60408051808201909152606081526000602082015260408051808201909152606081526000602082018190529061104b84836113e7565b611095828261083f565b6105bf576110a281611595565b6110ad8360206115a7565b6040516020016110be929190612b57565b60408051601f198184030181529082905262461bcd60e51b82526105ac91600401612bcc565b6040805180820190915260608082526000602083018190528351156111225761110d8482611749565b815191935091501561112257610ab9826118ee565b505060408051600081830181815260608301909352918152602081019190915292915050565b6000808061104b8482611a4a565b60408051808201909152600080825260208201526000806111778482611ae5565b925090506002811461118b5761118b612bdf565b6111958483611b58565b60079190910b845291506111a98483611b58565b5060070b6020840152509092915050565b6000601782116111cc57506001919050565b60ff82116111dc57506002919050565b61ffff82116111ed57506003919050565b63ffffffff821161120057506005919050565b506009919050565b611210612397565b805161121c9083611b72565b5060006020820152919050565b6105bf82600083611be9565b6060816020015160001461127a5760405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b21021a127a960a11b60448201526064016105ac565b50515190565b60606112936005607f60991b0184611d08565b6000806005607f60991b018886866112ac5760006112af565b60015b8a8a8e6040516020016112c796959493929190612bf5565b60408051601f19818403018152908290526112e191612c44565b600060405180830381855af49150503d806000811461131c576040519150601f19603f3d011682016040523d82523d6000602084013e611321565b606091505b50915091508161134457604051638a7db5bf60e01b815260040160405180910390fd5b61134d81611d56565b9998505050505050505050565b60008060008061136a8686611e39565b96509092506001600160401b0316905060ff8216156113d95760405162461bcd60e51b815260206004820152602560248201527f696e76616c6964206d616a20286578706563746564204d616a556e7369676e6560448201526464496e742960d81b60648201526084016105ac565b9250839150505b9250929050565b604080518082019091526060815260006020820152600080600061140b8686611e39565b96509092506001600160401b0316905060ff821660021480611430575060ff82166003145b61149a5760405162461bcd60e51b815260206004820152603560248201527f696e76616c6964206d616a20286578706563746564204d616a42797465537472604482015274696e67206f72204d616a54657874537472696e672960581b60648201526084016105ac565b60006114a68287612c56565b90506000826001600160401b038111156114c2576114c26128a0565b6040519080825280601f01601f1916602001820160405280156114ec576020820181803683370190505b5090506000875b838110156115615789818151811061150d5761150d6129c4565b602001015160f81c60f81b83838151811061152a5761152a6129c4565b60200101906001600160f81b031916908160001a9053508161154b81612b27565b925050808061155990612b27565b9150506114f3565b506040805180820190915282815260ff86166003146020820152611585858a612c56565b9650965050505050509250929050565b60606103f56001600160a01b03831660145b606060006115b6836002612c69565b6115c1906002612c56565b6001600160401b038111156115d8576115d86128a0565b6040519080825280601f01601f191660200182016040528015611602576020820181803683370190505b509050600360fc1b8160008151811061161d5761161d6129c4565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061164c5761164c6129c4565b60200101906001600160f81b031916908160001a9053506000611670846002612c69565b61167b906001612c56565b90505b60018111156116f3576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106116af576116af6129c4565b1a60f81b8282815181106116c5576116c56129c4565b60200101906001600160f81b031916908160001a90535060049490941c936116ec81612b40565b905061167e565b5083156117425760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105ac565b9392505050565b6060600080600061175a8686611e39565b96509092506001600160401b0316905060ff82166006148061177f575060ff82166002145b6117e25760405162461bcd60e51b815260206004820152602e60248201527f696e76616c6964206d616a20286578706563746564204d616a546167206f722060448201526d4d616a42797465537472696e672960901b60648201526084016105ac565b60051960ff83160161181b576117f88686611e39565b96509092506001600160401b0316905060ff821660021461181b5761181b612bdf565b60006118278287612c56565b90506000826001600160401b03811115611843576118436128a0565b6040519080825280601f01601f19166020018201604052801561186d576020820181803683370190505b5090506000875b838110156118e25789818151811061188e5761188e6129c4565b602001015160f81c60f81b8383815181106118ab576118ab6129c4565b60200101906001600160f81b031916908160001a905350816118cc81612b27565b92505080806118da90612b27565b915050611874565b5081611585858a612c56565b6040805180820190915260608152600060208201528151600003611937575050604080516080810182526001918101918252600060608201819052918152602081019190915290565b6000600183516119479190612c80565b6001600160401b0381111561195e5761195e6128a0565b6040519080825280601f01601f191660200182016040528015611988576020820181803683370190505b5090506000836000815181106119a0576119a06129c4565b01602001516001600160f81b031916600160f81b036119bd575060015b60015b8451811015611a2f578481815181106119db576119db6129c4565b01602001516001600160f81b031916836119f6600184612c80565b81518110611a0657611a066129c4565b60200101906001600160f81b031916908160001a90535080611a2781612b27565b9150506119c0565b50604080518082019091529182521515602082015292915050565b600080600080611a5a8686611e39565b96509092506001600160401b0316905060ff8216600714611abd5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c6964206d616a20286578706563746564204d616a4f74686572290060448201526064016105ac565b6015811480611acc5750601481145b611ad857611ad8612bdf565b6014141595939450505050565b600080600080611af58686611e39565b96509092506001600160401b0316905060ff82166004146113d95760405162461bcd60e51b815260206004820152601f60248201527f696e76616c6964206d616a20286578706563746564204d616a4172726179290060448201526064016105ac565b60008080611b668585612013565b90969095509350505050565b604080518082019091526060815260006020820152611b92602083612c93565b15611bba57611ba2602083612c93565b611bad906020612c80565b611bb79083612c56565b91505b602080840183905260405180855260008152908184010181811015611bde57600080fd5b604052509192915050565b6017816001600160401b031611611c15578251611c0f9060e0600585901b1683176120b0565b50505050565b60ff816001600160401b031611611c55578251611c3d906018611fe0600586901b16176120b0565b508251611c0f906001600160401b0383166001612119565b61ffff816001600160401b031611611c96578251611c7e906019611fe0600586901b16176120b0565b508251611c0f906001600160401b0383166002612119565b63ffffffff816001600160401b031611611cd9578251611cc190601a611fe0600586901b16176120b0565b508251611c0f906001600160401b0383166004612119565b8251611cf090601b611fe0600586901b16176120b0565b508251611c0f906001600160401b0383166008612119565b4781811015611d3457604051634787a10360e11b815260048101829052602481018390526044016105ac565b823f151580611c0f5760405163064d954b60e41b815260040160405180910390fd5b6060600080600084806020019051810190611d719190612cb5565b919450925090506001600160401b038216611dab57805115611da657604051630e74990760e01b815260040160405180910390fd5b611e17565b6001600160401b03821660511480611dcc57506001600160401b0382166071145b15611df3578051600003611da657604051630e74990760e01b815260040160405180910390fd5b60405163f1f6bced60e01b81526001600160401b03831660048201526024016105ac565b8215610ab95760405163d4bb667160e01b8152600481018490526024016105ac565b600080600080611e49868661219e565b9050611e56600186612c56565b94506007600582901c16601f8216601c8110611ec25760405162461bcd60e51b815260206004820152602560248201527f63616e6e6f742068616e646c6520686561646572732077697468206578747261604482015264203e20323760d81b60648201526084016105ac565b60188160ff161015611ee05790945060ff16925084915061200c9050565b8060ff16601803611f5c576000611ef7898961219e565b9050611f04600189612c56565b975060188160ff161015611f495760405162461bcd60e51b815260206004820152600c60248201526b34b73b30b634b21031b137b960a11b60448201526064016105ac565b9195505060ff16925084915061200c9050565b8060ff16601903611f96576000611f7389896121ed565b9050611f80600289612c56565b97509195505061ffff16925084915061200c9050565b8060ff16601a03611fd2576000611fad8989612226565b9050611fba600489612c56565b97509195505063ffffffff16925084915061200c9050565b8060ff16601b14611fe557611fe5612bdf565b6000611ff1898961225f565b9050611ffe600889612c56565b975091955090935085925050505b9250925092565b6000806000806120238686611e39565b96509092506001600160401b0316905060ff821660011480612046575060ff8216155b6113d95760405162461bcd60e51b815260206004820152603560248201527f696e76616c6964206d616a20286578706563746564204d616a5369676e6564496044820152746e74206f72204d616a556e7369676e6564496e742960581b60648201526084016105ac565b60408051808201909152606081526000602082015282515160006120d5826001612c56565b9050846020015182106120f6576120f6856120f1836002612c69565b612298565b845160208382010185815350805182111561210f578181525b5093949350505050565b604080518082019091526060815260006020820152835151600061213d8285612c56565b9050856020015181111561215a5761215a866120f1836002612c69565b6000600161216a86610100612e64565b6121749190612c80565b90508651828101878319825116178152508051831115612192578281525b50959695505050505050565b60006121ab826001612c56565b835110156121cb5760405162461bcd60e51b81526004016105ac90612e70565b8282815181106121dd576121dd6129c4565b016020015160f81c905092915050565b60006121fa826002612c56565b8351101561221a5760405162461bcd60e51b81526004016105ac90612e70565b50016020015160f01c90565b6000612233826004612c56565b835110156122535760405162461bcd60e51b81526004016105ac90612e70565b50016020015160e01c90565b600061226c826008612c56565b8351101561228c5760405162461bcd60e51b81526004016105ac90612e70565b50016020015160c01c90565b81516122a48383611b72565b50611c0f83826040805180820190915260608152600060208201526117428383845160408051808201909152606081526000602082015282518211156122e957600080fd5b83515160006122f88483612c56565b9050856020015181111561231557612315866120f1836002612c69565b85518051838201602001916000918085111561232f578482525b505050602086015b6020861061236f578051825261234e602083612c56565b915061235b602082612c56565b9050612368602087612c80565b9550612337565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b60405180604001604052806123bf604051806040016040528060608152602001600081525090565b8152602001600081525090565b6000602082840312156123de57600080fd5b81356001600160e01b03198116811461174257600080fd5b6001600160401b0381168114610b1557600080fd5b60006020828403121561241d57600080fd5b8135611742816123f6565b60005b8381101561244357818101518382015260200161242b565b50506000910152565b60008151808452612464816020860160208601612428565b601f01601f19169290920160200192915050565b60408152600061248b604083018561244c565b905082151560208301529392505050565b6000602082840312156124ae57600080fd5b5035919050565b80356001600160a01b03811681146124cc57600080fd5b919050565b6000602082840312156124e357600080fd5b611742826124b5565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561254157603f1988860301845261252f85835161244c565b94509285019290850190600101612513565b5092979650505050505050565b6000806040838503121561256157600080fd5b82359150612571602084016124b5565b90509250929050565b602081526000825160406020840152612596606084018261244c565b90506020840151151560408401528091505092915050565b60008083601f8401126125c057600080fd5b5081356001600160401b038111156125d757600080fd5b6020830191508360208285010111156113e057600080fd5b60008060006040848603121561260457600080fd5b61260d846124b5565b925060208401356001600160401b0381111561262857600080fd5b612634868287016125ae565b9497909650939450505050565b6000806000806060858703121561265757600080fd5b84356001600160401b0381111561266d57600080fd5b612679878288016125ae565b90989097506020870135966040013595509350505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561270057888303603f19018552815180516001600160401b031684528701518784018790526126ed8785018261244c565b95880195935050908601906001016126b8565b509098975050505050505050565b6000806020838503121561272157600080fd5b82356001600160401b0381111561273757600080fd5b611b66858286016125ae565b60008060006040848603121561275857600080fd5b83356001600160401b0381111561276e57600080fd5b61277a868287016125ae565b909790965060209590950135949350505050565b600080600080604085870312156127a457600080fd5b84356001600160401b03808211156127bb57600080fd5b6127c7888389016125ae565b909650945060208701359150808211156127e057600080fd5b818701915087601f8301126127f457600080fd5b81358181111561280357600080fd5b8860208260051b850101111561281857600080fd5b95989497505060200194505050565b600181811c9082168061283b57607f821691505b60208210810361285b57634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b601f82111561053b57600081815260208120601f850160051c810160208610156128dd5750805b601f850160051c820191505b818110156128fc578281556001016128e9565b505050505050565b6001600160401b0383111561291b5761291b6128a0565b61292f836129298354612827565b836128b6565b6000601f841160018114612963576000851561294b5750838201355b600019600387901b1c1916600186901b1783556129bd565b600083815260209020601f19861690835b828110156129945786850135825560209485019460019092019101612974565b50868210156129b15760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b634e487b7160e01b600052603260045260246000fd5b60008235603e198336030181126129f057600080fd5b9190910192915050565b8135612a05816123f6565b815467ffffffffffffffff19166001600160401b0391821617825560019081830160208581013536879003601e19018112612a3f57600080fd5b8601803584811115612a5057600080fd5b8036038383011315612a6157600080fd5b612a7581612a6f8654612827565b866128b6565b60009450601f811160018114612aad5760008215612a9557508286018401355b600019600384901b1c1916600183901b178555612b06565b600085815260209020601f19831690875b82811015612add57858901870135825597860197908901908601612abe565b5083821015612afc5760001960f88560031b161c198689870101351681555b50508682881b0185555b505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612b3957612b39612b11565b5060010190565b600081612b4f57612b4f612b11565b506000190190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612b8f816017850160208801612428565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612bc0816028840160208801612428565b01602801949350505050565b602081526000611742602083018461244c565b634e487b7160e01b600052600160045260246000fd5b60006001600160401b0380891683528760208401528087166040840152808616606084015260c06080840152612c2e60c084018661244c565b915080841660a084015250979650505050505050565b600082516129f0818460208701612428565b808201808211156103f5576103f5612b11565b80820281158282048414176103f5576103f5612b11565b818103818111156103f5576103f5612b11565b600082612cb057634e487b7160e01b600052601260045260246000fd5b500690565b600080600060608486031215612cca57600080fd5b835192506020840151612cdc816123f6565b60408501519092506001600160401b0380821115612cf957600080fd5b818601915086601f830112612d0d57600080fd5b815181811115612d1f57612d1f6128a0565b604051601f8201601f19908116603f01168101908382118183101715612d4757612d476128a0565b81604052828152896020848701011115612d6057600080fd5b612d71836020830160208801612428565b80955050505050509250925092565b600181815b80851115612dbb578160001904821115612da157612da1612b11565b80851615612dae57918102915b93841c9390800290612d85565b509250929050565b600082612dd2575060016103f5565b81612ddf575060006103f5565b8160018114612df55760028114612dff57612e1b565b60019150506103f5565b60ff841115612e1057612e10612b11565b50506001821b6103f5565b5060208310610133831016604e8410600b8410161715612e3e575081810a6103f5565b612e488383612d80565b8060001904821115612e5c57612e5c612b11565b029392505050565b60006117428383612dc3565b602080825260149082015273736c6963696e67206f7574206f662072616e676560601b60408201526060019056fea26469706673582212206235360b176e1b29d7539f834f60d2bc94f41b0dc131289c66810ed6dfd6fc6164736f6c63430008150033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Contract.Contract.DEFAULTADMINROLE(&_Contract.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Contract.Contract.DEFAULTADMINROLE(&_Contract.CallOpts)
}

// PUBADMINROLE is a free data retrieval call binding the contract method 0x822ba40b.
//
// Solidity: function PUB_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCaller) PUBADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "PUB_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PUBADMINROLE is a free data retrieval call binding the contract method 0x822ba40b.
//
// Solidity: function PUB_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractSession) PUBADMINROLE() ([32]byte, error) {
	return _Contract.Contract.PUBADMINROLE(&_Contract.CallOpts)
}

// PUBADMINROLE is a free data retrieval call binding the contract method 0x822ba40b.
//
// Solidity: function PUB_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCallerSession) PUBADMINROLE() ([32]byte, error) {
	return _Contract.Contract.PUBADMINROLE(&_Contract.CallOpts)
}

// DealActivation is a free data retrieval call binding the contract method 0x9f29370b.
//
// Solidity: function dealActivation(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCaller) DealActivation(opts *bind.CallOpts, dealID uint64) (int64, int64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealActivation", dealID)

	if err != nil {
		return *new(int64), *new(int64), err
	}

	out0 := *abi.ConvertType(out[0], new(int64)).(*int64)
	out1 := *abi.ConvertType(out[1], new(int64)).(*int64)

	return out0, out1, err

}

// DealActivation is a free data retrieval call binding the contract method 0x9f29370b.
//
// Solidity: function dealActivation(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractSession) DealActivation(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealActivation(&_Contract.CallOpts, dealID)
}

// DealActivation is a free data retrieval call binding the contract method 0x9f29370b.
//
// Solidity: function dealActivation(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCallerSession) DealActivation(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealActivation(&_Contract.CallOpts, dealID)
}

// DealClient is a free data retrieval call binding the contract method 0x06a09dea.
//
// Solidity: function dealClient(uint64 dealID) view returns(uint64)
func (_Contract *ContractCaller) DealClient(opts *bind.CallOpts, dealID uint64) (uint64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealClient", dealID)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// DealClient is a free data retrieval call binding the contract method 0x06a09dea.
//
// Solidity: function dealClient(uint64 dealID) view returns(uint64)
func (_Contract *ContractSession) DealClient(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealClient(&_Contract.CallOpts, dealID)
}

// DealClient is a free data retrieval call binding the contract method 0x06a09dea.
//
// Solidity: function dealClient(uint64 dealID) view returns(uint64)
func (_Contract *ContractCallerSession) DealClient(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealClient(&_Contract.CallOpts, dealID)
}

// DealClientCollateral is a free data retrieval call binding the contract method 0x89ec0b93.
//
// Solidity: function dealClientCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCaller) DealClientCollateral(opts *bind.CallOpts, dealID uint64) (CommonTypesBigInt, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealClientCollateral", dealID)

	if err != nil {
		return *new(CommonTypesBigInt), err
	}

	out0 := *abi.ConvertType(out[0], new(CommonTypesBigInt)).(*CommonTypesBigInt)

	return out0, err

}

// DealClientCollateral is a free data retrieval call binding the contract method 0x89ec0b93.
//
// Solidity: function dealClientCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractSession) DealClientCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealClientCollateral(&_Contract.CallOpts, dealID)
}

// DealClientCollateral is a free data retrieval call binding the contract method 0x89ec0b93.
//
// Solidity: function dealClientCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCallerSession) DealClientCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealClientCollateral(&_Contract.CallOpts, dealID)
}

// DealLabel is a free data retrieval call binding the contract method 0x121e620e.
//
// Solidity: function dealLabel(uint64 dealID) view returns(bytes, bool)
func (_Contract *ContractCaller) DealLabel(opts *bind.CallOpts, dealID uint64) ([]byte, bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealLabel", dealID)

	if err != nil {
		return *new([]byte), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// DealLabel is a free data retrieval call binding the contract method 0x121e620e.
//
// Solidity: function dealLabel(uint64 dealID) view returns(bytes, bool)
func (_Contract *ContractSession) DealLabel(dealID uint64) ([]byte, bool, error) {
	return _Contract.Contract.DealLabel(&_Contract.CallOpts, dealID)
}

// DealLabel is a free data retrieval call binding the contract method 0x121e620e.
//
// Solidity: function dealLabel(uint64 dealID) view returns(bytes, bool)
func (_Contract *ContractCallerSession) DealLabel(dealID uint64) ([]byte, bool, error) {
	return _Contract.Contract.DealLabel(&_Contract.CallOpts, dealID)
}

// DealProvider is a free data retrieval call binding the contract method 0xd06f6802.
//
// Solidity: function dealProvider(uint64 dealID) view returns(uint64)
func (_Contract *ContractCaller) DealProvider(opts *bind.CallOpts, dealID uint64) (uint64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealProvider", dealID)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// DealProvider is a free data retrieval call binding the contract method 0xd06f6802.
//
// Solidity: function dealProvider(uint64 dealID) view returns(uint64)
func (_Contract *ContractSession) DealProvider(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealProvider(&_Contract.CallOpts, dealID)
}

// DealProvider is a free data retrieval call binding the contract method 0xd06f6802.
//
// Solidity: function dealProvider(uint64 dealID) view returns(uint64)
func (_Contract *ContractCallerSession) DealProvider(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealProvider(&_Contract.CallOpts, dealID)
}

// DealProviderCollateral is a free data retrieval call binding the contract method 0x3c7e5999.
//
// Solidity: function dealProviderCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCaller) DealProviderCollateral(opts *bind.CallOpts, dealID uint64) (CommonTypesBigInt, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealProviderCollateral", dealID)

	if err != nil {
		return *new(CommonTypesBigInt), err
	}

	out0 := *abi.ConvertType(out[0], new(CommonTypesBigInt)).(*CommonTypesBigInt)

	return out0, err

}

// DealProviderCollateral is a free data retrieval call binding the contract method 0x3c7e5999.
//
// Solidity: function dealProviderCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractSession) DealProviderCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealProviderCollateral(&_Contract.CallOpts, dealID)
}

// DealProviderCollateral is a free data retrieval call binding the contract method 0x3c7e5999.
//
// Solidity: function dealProviderCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCallerSession) DealProviderCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealProviderCollateral(&_Contract.CallOpts, dealID)
}

// DealTerm is a free data retrieval call binding the contract method 0x87a41b81.
//
// Solidity: function dealTerm(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCaller) DealTerm(opts *bind.CallOpts, dealID uint64) (int64, int64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealTerm", dealID)

	if err != nil {
		return *new(int64), *new(int64), err
	}

	out0 := *abi.ConvertType(out[0], new(int64)).(*int64)
	out1 := *abi.ConvertType(out[1], new(int64)).(*int64)

	return out0, out1, err

}

// DealTerm is a free data retrieval call binding the contract method 0x87a41b81.
//
// Solidity: function dealTerm(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractSession) DealTerm(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealTerm(&_Contract.CallOpts, dealID)
}

// DealTerm is a free data retrieval call binding the contract method 0x87a41b81.
//
// Solidity: function dealTerm(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCallerSession) DealTerm(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealTerm(&_Contract.CallOpts, dealID)
}

// DealTotalPrice is a free data retrieval call binding the contract method 0x484d5a3a.
//
// Solidity: function dealTotalPrice(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCaller) DealTotalPrice(opts *bind.CallOpts, dealID uint64) (CommonTypesBigInt, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealTotalPrice", dealID)

	if err != nil {
		return *new(CommonTypesBigInt), err
	}

	out0 := *abi.ConvertType(out[0], new(CommonTypesBigInt)).(*CommonTypesBigInt)

	return out0, err

}

// DealTotalPrice is a free data retrieval call binding the contract method 0x484d5a3a.
//
// Solidity: function dealTotalPrice(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractSession) DealTotalPrice(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealTotalPrice(&_Contract.CallOpts, dealID)
}

// DealTotalPrice is a free data retrieval call binding the contract method 0x484d5a3a.
//
// Solidity: function dealTotalPrice(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCallerSession) DealTotalPrice(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealTotalPrice(&_Contract.CallOpts, dealID)
}

// DealVerified is a free data retrieval call binding the contract method 0x3ff421e9.
//
// Solidity: function dealVerified(uint64 dealID) view returns(bool)
func (_Contract *ContractCaller) DealVerified(opts *bind.CallOpts, dealID uint64) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealVerified", dealID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// DealVerified is a free data retrieval call binding the contract method 0x3ff421e9.
//
// Solidity: function dealVerified(uint64 dealID) view returns(bool)
func (_Contract *ContractSession) DealVerified(dealID uint64) (bool, error) {
	return _Contract.Contract.DealVerified(&_Contract.CallOpts, dealID)
}

// DealVerified is a free data retrieval call binding the contract method 0x3ff421e9.
//
// Solidity: function dealVerified(uint64 dealID) view returns(bool)
func (_Contract *ContractCallerSession) DealVerified(dealID uint64) (bool, error) {
	return _Contract.Contract.DealVerified(&_Contract.CallOpts, dealID)
}

// GetOwnerByPub is a free data retrieval call binding the contract method 0x5bf0855e.
//
// Solidity: function getOwnerByPub(string pub) view returns(address)
func (_Contract *ContractCaller) GetOwnerByPub(opts *bind.CallOpts, pub string) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getOwnerByPub", pub)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetOwnerByPub is a free data retrieval call binding the contract method 0x5bf0855e.
//
// Solidity: function getOwnerByPub(string pub) view returns(address)
func (_Contract *ContractSession) GetOwnerByPub(pub string) (common.Address, error) {
	return _Contract.Contract.GetOwnerByPub(&_Contract.CallOpts, pub)
}

// GetOwnerByPub is a free data retrieval call binding the contract method 0x5bf0855e.
//
// Solidity: function getOwnerByPub(string pub) view returns(address)
func (_Contract *ContractCallerSession) GetOwnerByPub(pub string) (common.Address, error) {
	return _Contract.Contract.GetOwnerByPub(&_Contract.CallOpts, pub)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Contract *ContractCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Contract *ContractSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Contract.Contract.GetRoleAdmin(&_Contract.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Contract *ContractCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Contract.Contract.GetRoleAdmin(&_Contract.CallOpts, role)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Contract *ContractCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Contract *ContractSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Contract.Contract.HasRole(&_Contract.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Contract *ContractCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Contract.Contract.HasRole(&_Contract.CallOpts, role, account)
}

// LatestNDeals is a free data retrieval call binding the contract method 0x6f0a43c7.
//
// Solidity: function latestNDeals(string pub, uint256 n) view returns((uint64,string)[])
func (_Contract *ContractCaller) LatestNDeals(opts *bind.CallOpts, pub string, n *big.Int) ([]BasinStorageDealInfo, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "latestNDeals", pub, n)

	if err != nil {
		return *new([]BasinStorageDealInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]BasinStorageDealInfo)).(*[]BasinStorageDealInfo)

	return out0, err

}

// LatestNDeals is a free data retrieval call binding the contract method 0x6f0a43c7.
//
// Solidity: function latestNDeals(string pub, uint256 n) view returns((uint64,string)[])
func (_Contract *ContractSession) LatestNDeals(pub string, n *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.LatestNDeals(&_Contract.CallOpts, pub, n)
}

// LatestNDeals is a free data retrieval call binding the contract method 0x6f0a43c7.
//
// Solidity: function latestNDeals(string pub, uint256 n) view returns((uint64,string)[])
func (_Contract *ContractCallerSession) LatestNDeals(pub string, n *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.LatestNDeals(&_Contract.CallOpts, pub, n)
}

// PaginatedDeals is a free data retrieval call binding the contract method 0x59b64c5d.
//
// Solidity: function paginatedDeals(string pub, uint256 offset, uint256 limit) view returns((uint64,string)[])
func (_Contract *ContractCaller) PaginatedDeals(opts *bind.CallOpts, pub string, offset *big.Int, limit *big.Int) ([]BasinStorageDealInfo, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "paginatedDeals", pub, offset, limit)

	if err != nil {
		return *new([]BasinStorageDealInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]BasinStorageDealInfo)).(*[]BasinStorageDealInfo)

	return out0, err

}

// PaginatedDeals is a free data retrieval call binding the contract method 0x59b64c5d.
//
// Solidity: function paginatedDeals(string pub, uint256 offset, uint256 limit) view returns((uint64,string)[])
func (_Contract *ContractSession) PaginatedDeals(pub string, offset *big.Int, limit *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.PaginatedDeals(&_Contract.CallOpts, pub, offset, limit)
}

// PaginatedDeals is a free data retrieval call binding the contract method 0x59b64c5d.
//
// Solidity: function paginatedDeals(string pub, uint256 offset, uint256 limit) view returns((uint64,string)[])
func (_Contract *ContractCallerSession) PaginatedDeals(pub string, offset *big.Int, limit *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.PaginatedDeals(&_Contract.CallOpts, pub, offset, limit)
}

// PubsOfOwner is a free data retrieval call binding the contract method 0x26294a77.
//
// Solidity: function pubsOfOwner(address owner) view returns(string[])
func (_Contract *ContractCaller) PubsOfOwner(opts *bind.CallOpts, owner common.Address) ([]string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "pubsOfOwner", owner)

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// PubsOfOwner is a free data retrieval call binding the contract method 0x26294a77.
//
// Solidity: function pubsOfOwner(address owner) view returns(string[])
func (_Contract *ContractSession) PubsOfOwner(owner common.Address) ([]string, error) {
	return _Contract.Contract.PubsOfOwner(&_Contract.CallOpts, owner)
}

// PubsOfOwner is a free data retrieval call binding the contract method 0x26294a77.
//
// Solidity: function pubsOfOwner(address owner) view returns(string[])
func (_Contract *ContractCallerSession) PubsOfOwner(owner common.Address) ([]string, error) {
	return _Contract.Contract.PubsOfOwner(&_Contract.CallOpts, owner)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Contract *ContractCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Contract *ContractSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Contract.Contract.SupportsInterface(&_Contract.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Contract *ContractCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Contract.Contract.SupportsInterface(&_Contract.CallOpts, interfaceId)
}

// AddDeals is a paid mutator transaction binding the contract method 0xa4de7e49.
//
// Solidity: function addDeals(string pub, (uint64,string)[] deals) returns()
func (_Contract *ContractTransactor) AddDeals(opts *bind.TransactOpts, pub string, deals []BasinStorageDealInfo) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addDeals", pub, deals)
}

// AddDeals is a paid mutator transaction binding the contract method 0xa4de7e49.
//
// Solidity: function addDeals(string pub, (uint64,string)[] deals) returns()
func (_Contract *ContractSession) AddDeals(pub string, deals []BasinStorageDealInfo) (*types.Transaction, error) {
	return _Contract.Contract.AddDeals(&_Contract.TransactOpts, pub, deals)
}

// AddDeals is a paid mutator transaction binding the contract method 0xa4de7e49.
//
// Solidity: function addDeals(string pub, (uint64,string)[] deals) returns()
func (_Contract *ContractTransactorSession) AddDeals(pub string, deals []BasinStorageDealInfo) (*types.Transaction, error) {
	return _Contract.Contract.AddDeals(&_Contract.TransactOpts, pub, deals)
}

// CreatePub is a paid mutator transaction binding the contract method 0x52b62b3e.
//
// Solidity: function createPub(address owner, string pub) returns()
func (_Contract *ContractTransactor) CreatePub(opts *bind.TransactOpts, owner common.Address, pub string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createPub", owner, pub)
}

// CreatePub is a paid mutator transaction binding the contract method 0x52b62b3e.
//
// Solidity: function createPub(address owner, string pub) returns()
func (_Contract *ContractSession) CreatePub(owner common.Address, pub string) (*types.Transaction, error) {
	return _Contract.Contract.CreatePub(&_Contract.TransactOpts, owner, pub)
}

// CreatePub is a paid mutator transaction binding the contract method 0x52b62b3e.
//
// Solidity: function createPub(address owner, string pub) returns()
func (_Contract *ContractTransactorSession) CreatePub(owner common.Address, pub string) (*types.Transaction, error) {
	return _Contract.Contract.CreatePub(&_Contract.TransactOpts, owner, pub)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Contract *ContractSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.GrantRole(&_Contract.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.GrantRole(&_Contract.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Contract *ContractSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RenounceRole(&_Contract.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RenounceRole(&_Contract.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Contract *ContractSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RevokeRole(&_Contract.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RevokeRole(&_Contract.TransactOpts, role, account)
}

// ContractDealAddedIterator is returned from FilterDealAdded and is used to iterate over the raw logs and unpacked data for DealAdded events raised by the Contract contract.
type ContractDealAddedIterator struct {
	Event *ContractDealAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractDealAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractDealAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractDealAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractDealAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractDealAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractDealAdded represents a DealAdded event raised by the Contract contract.
type ContractDealAdded struct {
	DealId *big.Int
	Pub    common.Hash
	Owner  common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterDealAdded is a free log retrieval operation binding the contract event 0x204834f22022f11eeb78462cfca42c0249cae717b04eba08c0ba32426d750d70.
//
// Solidity: event DealAdded(uint256 indexed dealId, string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) FilterDealAdded(opts *bind.FilterOpts, dealId []*big.Int, pub []string, owner []common.Address) (*ContractDealAddedIterator, error) {

	var dealIdRule []interface{}
	for _, dealIdItem := range dealId {
		dealIdRule = append(dealIdRule, dealIdItem)
	}
	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "DealAdded", dealIdRule, pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return &ContractDealAddedIterator{contract: _Contract.contract, event: "DealAdded", logs: logs, sub: sub}, nil
}

// WatchDealAdded is a free log subscription operation binding the contract event 0x204834f22022f11eeb78462cfca42c0249cae717b04eba08c0ba32426d750d70.
//
// Solidity: event DealAdded(uint256 indexed dealId, string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) WatchDealAdded(opts *bind.WatchOpts, sink chan<- *ContractDealAdded, dealId []*big.Int, pub []string, owner []common.Address) (event.Subscription, error) {

	var dealIdRule []interface{}
	for _, dealIdItem := range dealId {
		dealIdRule = append(dealIdRule, dealIdItem)
	}
	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "DealAdded", dealIdRule, pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractDealAdded)
				if err := _Contract.contract.UnpackLog(event, "DealAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDealAdded is a log parse operation binding the contract event 0x204834f22022f11eeb78462cfca42c0249cae717b04eba08c0ba32426d750d70.
//
// Solidity: event DealAdded(uint256 indexed dealId, string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) ParseDealAdded(log types.Log) (*ContractDealAdded, error) {
	event := new(ContractDealAdded)
	if err := _Contract.contract.UnpackLog(event, "DealAdded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractPubCreatedIterator is returned from FilterPubCreated and is used to iterate over the raw logs and unpacked data for PubCreated events raised by the Contract contract.
type ContractPubCreatedIterator struct {
	Event *ContractPubCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractPubCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractPubCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractPubCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractPubCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractPubCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractPubCreated represents a PubCreated event raised by the Contract contract.
type ContractPubCreated struct {
	Pub   common.Hash
	Owner common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterPubCreated is a free log retrieval operation binding the contract event 0xf8debc2f1745eba86909890f2dc061624705c74329348829e04aba43c015b9a2.
//
// Solidity: event PubCreated(string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) FilterPubCreated(opts *bind.FilterOpts, pub []string, owner []common.Address) (*ContractPubCreatedIterator, error) {

	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "PubCreated", pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return &ContractPubCreatedIterator{contract: _Contract.contract, event: "PubCreated", logs: logs, sub: sub}, nil
}

// WatchPubCreated is a free log subscription operation binding the contract event 0xf8debc2f1745eba86909890f2dc061624705c74329348829e04aba43c015b9a2.
//
// Solidity: event PubCreated(string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) WatchPubCreated(opts *bind.WatchOpts, sink chan<- *ContractPubCreated, pub []string, owner []common.Address) (event.Subscription, error) {

	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "PubCreated", pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractPubCreated)
				if err := _Contract.contract.UnpackLog(event, "PubCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePubCreated is a log parse operation binding the contract event 0xf8debc2f1745eba86909890f2dc061624705c74329348829e04aba43c015b9a2.
//
// Solidity: event PubCreated(string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) ParsePubCreated(log types.Log) (*ContractPubCreated, error) {
	event := new(ContractPubCreated)
	if err := _Contract.contract.UnpackLog(event, "PubCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the Contract contract.
type ContractRoleAdminChangedIterator struct {
	Event *ContractRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractRoleAdminChanged represents a RoleAdminChanged event raised by the Contract contract.
type ContractRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Contract *ContractFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*ContractRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &ContractRoleAdminChangedIterator{contract: _Contract.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Contract *ContractFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *ContractRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractRoleAdminChanged)
				if err := _Contract.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Contract *ContractFilterer) ParseRoleAdminChanged(log types.Log) (*ContractRoleAdminChanged, error) {
	event := new(ContractRoleAdminChanged)
	if err := _Contract.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the Contract contract.
type ContractRoleGrantedIterator struct {
	Event *ContractRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractRoleGranted represents a RoleGranted event raised by the Contract contract.
type ContractRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*ContractRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &ContractRoleGrantedIterator{contract: _Contract.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *ContractRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractRoleGranted)
				if err := _Contract.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) ParseRoleGranted(log types.Log) (*ContractRoleGranted, error) {
	event := new(ContractRoleGranted)
	if err := _Contract.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the Contract contract.
type ContractRoleRevokedIterator struct {
	Event *ContractRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractRoleRevoked represents a RoleRevoked event raised by the Contract contract.
type ContractRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*ContractRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &ContractRoleRevokedIterator{contract: _Contract.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *ContractRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractRoleRevoked)
				if err := _Contract.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) ParseRoleRevoked(log types.Log) (*ContractRoleRevoked, error) {
	event := new(ContractRoleRevoked)
	if err := _Contract.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
