// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethereum

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BasinStorageDealInfo is an auto generated low-level Go binding around an user-defined struct.
type BasinStorageDealInfo struct {
	Id           uint64
	SelectorPath string
}

// CommonTypesBigInt is an auto generated low-level Go binding around an user-defined struct.
type CommonTypesBigInt struct {
	Val []byte
	Neg bool
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"errorCode\",\"type\":\"int256\"}],\"name\":\"ActorError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ActorNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"DealEpochAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailToCallActor\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"InvalidCodec\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidResponseLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NotEnoughBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PubAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PubDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"dealId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"DealAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"PubCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PUB_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"selectorPath\",\"type\":\"string\"}],\"internalType\":\"structBasinStorage.DealInfo[]\",\"name\":\"deals\",\"type\":\"tuple[]\"}],\"name\":\"addDeals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"}],\"name\":\"createPub\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealActivation\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealClient\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealClientCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"neg\",\"type\":\"bool\"}],\"internalType\":\"structCommonTypes.BigInt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealLabel\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealProvider\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealProviderCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"neg\",\"type\":\"bool\"}],\"internalType\":\"structCommonTypes.BigInt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealTerm\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealTotalPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"neg\",\"type\":\"bool\"}],\"internalType\":\"structCommonTypes.BigInt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"dealID\",\"type\":\"uint64\"}],\"name\":\"dealVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"}],\"name\":\"getOwnerByPub\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"n\",\"type\":\"uint256\"}],\"name\":\"latestNDeals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"selectorPath\",\"type\":\"string\"}],\"internalType\":\"structBasinStorage.DealInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pub\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"paginatedDeals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"selectorPath\",\"type\":\"string\"}],\"internalType\":\"structBasinStorage.DealInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"pubsOfOwner\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Contract.Contract.DEFAULTADMINROLE(&_Contract.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _Contract.Contract.DEFAULTADMINROLE(&_Contract.CallOpts)
}

// PUBADMINROLE is a free data retrieval call binding the contract method 0x822ba40b.
//
// Solidity: function PUB_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCaller) PUBADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "PUB_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// PUBADMINROLE is a free data retrieval call binding the contract method 0x822ba40b.
//
// Solidity: function PUB_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractSession) PUBADMINROLE() ([32]byte, error) {
	return _Contract.Contract.PUBADMINROLE(&_Contract.CallOpts)
}

// PUBADMINROLE is a free data retrieval call binding the contract method 0x822ba40b.
//
// Solidity: function PUB_ADMIN_ROLE() view returns(bytes32)
func (_Contract *ContractCallerSession) PUBADMINROLE() ([32]byte, error) {
	return _Contract.Contract.PUBADMINROLE(&_Contract.CallOpts)
}

// DealActivation is a free data retrieval call binding the contract method 0x9f29370b.
//
// Solidity: function dealActivation(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCaller) DealActivation(opts *bind.CallOpts, dealID uint64) (int64, int64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealActivation", dealID)

	if err != nil {
		return *new(int64), *new(int64), err
	}

	out0 := *abi.ConvertType(out[0], new(int64)).(*int64)
	out1 := *abi.ConvertType(out[1], new(int64)).(*int64)

	return out0, out1, err

}

// DealActivation is a free data retrieval call binding the contract method 0x9f29370b.
//
// Solidity: function dealActivation(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractSession) DealActivation(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealActivation(&_Contract.CallOpts, dealID)
}

// DealActivation is a free data retrieval call binding the contract method 0x9f29370b.
//
// Solidity: function dealActivation(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCallerSession) DealActivation(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealActivation(&_Contract.CallOpts, dealID)
}

// DealClient is a free data retrieval call binding the contract method 0x06a09dea.
//
// Solidity: function dealClient(uint64 dealID) view returns(uint64)
func (_Contract *ContractCaller) DealClient(opts *bind.CallOpts, dealID uint64) (uint64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealClient", dealID)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// DealClient is a free data retrieval call binding the contract method 0x06a09dea.
//
// Solidity: function dealClient(uint64 dealID) view returns(uint64)
func (_Contract *ContractSession) DealClient(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealClient(&_Contract.CallOpts, dealID)
}

// DealClient is a free data retrieval call binding the contract method 0x06a09dea.
//
// Solidity: function dealClient(uint64 dealID) view returns(uint64)
func (_Contract *ContractCallerSession) DealClient(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealClient(&_Contract.CallOpts, dealID)
}

// DealClientCollateral is a free data retrieval call binding the contract method 0x89ec0b93.
//
// Solidity: function dealClientCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCaller) DealClientCollateral(opts *bind.CallOpts, dealID uint64) (CommonTypesBigInt, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealClientCollateral", dealID)

	if err != nil {
		return *new(CommonTypesBigInt), err
	}

	out0 := *abi.ConvertType(out[0], new(CommonTypesBigInt)).(*CommonTypesBigInt)

	return out0, err

}

// DealClientCollateral is a free data retrieval call binding the contract method 0x89ec0b93.
//
// Solidity: function dealClientCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractSession) DealClientCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealClientCollateral(&_Contract.CallOpts, dealID)
}

// DealClientCollateral is a free data retrieval call binding the contract method 0x89ec0b93.
//
// Solidity: function dealClientCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCallerSession) DealClientCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealClientCollateral(&_Contract.CallOpts, dealID)
}

// DealLabel is a free data retrieval call binding the contract method 0x121e620e.
//
// Solidity: function dealLabel(uint64 dealID) view returns(bytes, bool)
func (_Contract *ContractCaller) DealLabel(opts *bind.CallOpts, dealID uint64) ([]byte, bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealLabel", dealID)

	if err != nil {
		return *new([]byte), *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	out1 := *abi.ConvertType(out[1], new(bool)).(*bool)

	return out0, out1, err

}

// DealLabel is a free data retrieval call binding the contract method 0x121e620e.
//
// Solidity: function dealLabel(uint64 dealID) view returns(bytes, bool)
func (_Contract *ContractSession) DealLabel(dealID uint64) ([]byte, bool, error) {
	return _Contract.Contract.DealLabel(&_Contract.CallOpts, dealID)
}

// DealLabel is a free data retrieval call binding the contract method 0x121e620e.
//
// Solidity: function dealLabel(uint64 dealID) view returns(bytes, bool)
func (_Contract *ContractCallerSession) DealLabel(dealID uint64) ([]byte, bool, error) {
	return _Contract.Contract.DealLabel(&_Contract.CallOpts, dealID)
}

// DealProvider is a free data retrieval call binding the contract method 0xd06f6802.
//
// Solidity: function dealProvider(uint64 dealID) view returns(uint64)
func (_Contract *ContractCaller) DealProvider(opts *bind.CallOpts, dealID uint64) (uint64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealProvider", dealID)

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// DealProvider is a free data retrieval call binding the contract method 0xd06f6802.
//
// Solidity: function dealProvider(uint64 dealID) view returns(uint64)
func (_Contract *ContractSession) DealProvider(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealProvider(&_Contract.CallOpts, dealID)
}

// DealProvider is a free data retrieval call binding the contract method 0xd06f6802.
//
// Solidity: function dealProvider(uint64 dealID) view returns(uint64)
func (_Contract *ContractCallerSession) DealProvider(dealID uint64) (uint64, error) {
	return _Contract.Contract.DealProvider(&_Contract.CallOpts, dealID)
}

// DealProviderCollateral is a free data retrieval call binding the contract method 0x3c7e5999.
//
// Solidity: function dealProviderCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCaller) DealProviderCollateral(opts *bind.CallOpts, dealID uint64) (CommonTypesBigInt, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealProviderCollateral", dealID)

	if err != nil {
		return *new(CommonTypesBigInt), err
	}

	out0 := *abi.ConvertType(out[0], new(CommonTypesBigInt)).(*CommonTypesBigInt)

	return out0, err

}

// DealProviderCollateral is a free data retrieval call binding the contract method 0x3c7e5999.
//
// Solidity: function dealProviderCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractSession) DealProviderCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealProviderCollateral(&_Contract.CallOpts, dealID)
}

// DealProviderCollateral is a free data retrieval call binding the contract method 0x3c7e5999.
//
// Solidity: function dealProviderCollateral(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCallerSession) DealProviderCollateral(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealProviderCollateral(&_Contract.CallOpts, dealID)
}

// DealTerm is a free data retrieval call binding the contract method 0x87a41b81.
//
// Solidity: function dealTerm(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCaller) DealTerm(opts *bind.CallOpts, dealID uint64) (int64, int64, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealTerm", dealID)

	if err != nil {
		return *new(int64), *new(int64), err
	}

	out0 := *abi.ConvertType(out[0], new(int64)).(*int64)
	out1 := *abi.ConvertType(out[1], new(int64)).(*int64)

	return out0, out1, err

}

// DealTerm is a free data retrieval call binding the contract method 0x87a41b81.
//
// Solidity: function dealTerm(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractSession) DealTerm(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealTerm(&_Contract.CallOpts, dealID)
}

// DealTerm is a free data retrieval call binding the contract method 0x87a41b81.
//
// Solidity: function dealTerm(uint64 dealID) view returns(int64, int64)
func (_Contract *ContractCallerSession) DealTerm(dealID uint64) (int64, int64, error) {
	return _Contract.Contract.DealTerm(&_Contract.CallOpts, dealID)
}

// DealTotalPrice is a free data retrieval call binding the contract method 0x484d5a3a.
//
// Solidity: function dealTotalPrice(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCaller) DealTotalPrice(opts *bind.CallOpts, dealID uint64) (CommonTypesBigInt, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealTotalPrice", dealID)

	if err != nil {
		return *new(CommonTypesBigInt), err
	}

	out0 := *abi.ConvertType(out[0], new(CommonTypesBigInt)).(*CommonTypesBigInt)

	return out0, err

}

// DealTotalPrice is a free data retrieval call binding the contract method 0x484d5a3a.
//
// Solidity: function dealTotalPrice(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractSession) DealTotalPrice(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealTotalPrice(&_Contract.CallOpts, dealID)
}

// DealTotalPrice is a free data retrieval call binding the contract method 0x484d5a3a.
//
// Solidity: function dealTotalPrice(uint64 dealID) view returns((bytes,bool))
func (_Contract *ContractCallerSession) DealTotalPrice(dealID uint64) (CommonTypesBigInt, error) {
	return _Contract.Contract.DealTotalPrice(&_Contract.CallOpts, dealID)
}

// DealVerified is a free data retrieval call binding the contract method 0x3ff421e9.
//
// Solidity: function dealVerified(uint64 dealID) view returns(bool)
func (_Contract *ContractCaller) DealVerified(opts *bind.CallOpts, dealID uint64) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "dealVerified", dealID)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// DealVerified is a free data retrieval call binding the contract method 0x3ff421e9.
//
// Solidity: function dealVerified(uint64 dealID) view returns(bool)
func (_Contract *ContractSession) DealVerified(dealID uint64) (bool, error) {
	return _Contract.Contract.DealVerified(&_Contract.CallOpts, dealID)
}

// DealVerified is a free data retrieval call binding the contract method 0x3ff421e9.
//
// Solidity: function dealVerified(uint64 dealID) view returns(bool)
func (_Contract *ContractCallerSession) DealVerified(dealID uint64) (bool, error) {
	return _Contract.Contract.DealVerified(&_Contract.CallOpts, dealID)
}

// GetOwnerByPub is a free data retrieval call binding the contract method 0x5bf0855e.
//
// Solidity: function getOwnerByPub(string pub) view returns(address)
func (_Contract *ContractCaller) GetOwnerByPub(opts *bind.CallOpts, pub string) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getOwnerByPub", pub)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetOwnerByPub is a free data retrieval call binding the contract method 0x5bf0855e.
//
// Solidity: function getOwnerByPub(string pub) view returns(address)
func (_Contract *ContractSession) GetOwnerByPub(pub string) (common.Address, error) {
	return _Contract.Contract.GetOwnerByPub(&_Contract.CallOpts, pub)
}

// GetOwnerByPub is a free data retrieval call binding the contract method 0x5bf0855e.
//
// Solidity: function getOwnerByPub(string pub) view returns(address)
func (_Contract *ContractCallerSession) GetOwnerByPub(pub string) (common.Address, error) {
	return _Contract.Contract.GetOwnerByPub(&_Contract.CallOpts, pub)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Contract *ContractCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Contract *ContractSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Contract.Contract.GetRoleAdmin(&_Contract.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_Contract *ContractCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _Contract.Contract.GetRoleAdmin(&_Contract.CallOpts, role)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Contract *ContractCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Contract *ContractSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Contract.Contract.HasRole(&_Contract.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_Contract *ContractCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _Contract.Contract.HasRole(&_Contract.CallOpts, role, account)
}

// LatestNDeals is a free data retrieval call binding the contract method 0x6f0a43c7.
//
// Solidity: function latestNDeals(string pub, uint256 n) view returns((uint64,string)[])
func (_Contract *ContractCaller) LatestNDeals(opts *bind.CallOpts, pub string, n *big.Int) ([]BasinStorageDealInfo, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "latestNDeals", pub, n)

	if err != nil {
		return *new([]BasinStorageDealInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]BasinStorageDealInfo)).(*[]BasinStorageDealInfo)

	return out0, err

}

// LatestNDeals is a free data retrieval call binding the contract method 0x6f0a43c7.
//
// Solidity: function latestNDeals(string pub, uint256 n) view returns((uint64,string)[])
func (_Contract *ContractSession) LatestNDeals(pub string, n *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.LatestNDeals(&_Contract.CallOpts, pub, n)
}

// LatestNDeals is a free data retrieval call binding the contract method 0x6f0a43c7.
//
// Solidity: function latestNDeals(string pub, uint256 n) view returns((uint64,string)[])
func (_Contract *ContractCallerSession) LatestNDeals(pub string, n *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.LatestNDeals(&_Contract.CallOpts, pub, n)
}

// PaginatedDeals is a free data retrieval call binding the contract method 0x59b64c5d.
//
// Solidity: function paginatedDeals(string pub, uint256 offset, uint256 limit) view returns((uint64,string)[])
func (_Contract *ContractCaller) PaginatedDeals(opts *bind.CallOpts, pub string, offset *big.Int, limit *big.Int) ([]BasinStorageDealInfo, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "paginatedDeals", pub, offset, limit)

	if err != nil {
		return *new([]BasinStorageDealInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]BasinStorageDealInfo)).(*[]BasinStorageDealInfo)

	return out0, err

}

// PaginatedDeals is a free data retrieval call binding the contract method 0x59b64c5d.
//
// Solidity: function paginatedDeals(string pub, uint256 offset, uint256 limit) view returns((uint64,string)[])
func (_Contract *ContractSession) PaginatedDeals(pub string, offset *big.Int, limit *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.PaginatedDeals(&_Contract.CallOpts, pub, offset, limit)
}

// PaginatedDeals is a free data retrieval call binding the contract method 0x59b64c5d.
//
// Solidity: function paginatedDeals(string pub, uint256 offset, uint256 limit) view returns((uint64,string)[])
func (_Contract *ContractCallerSession) PaginatedDeals(pub string, offset *big.Int, limit *big.Int) ([]BasinStorageDealInfo, error) {
	return _Contract.Contract.PaginatedDeals(&_Contract.CallOpts, pub, offset, limit)
}

// PubsOfOwner is a free data retrieval call binding the contract method 0x26294a77.
//
// Solidity: function pubsOfOwner(address owner) view returns(string[])
func (_Contract *ContractCaller) PubsOfOwner(opts *bind.CallOpts, owner common.Address) ([]string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "pubsOfOwner", owner)

	if err != nil {
		return *new([]string), err
	}

	out0 := *abi.ConvertType(out[0], new([]string)).(*[]string)

	return out0, err

}

// PubsOfOwner is a free data retrieval call binding the contract method 0x26294a77.
//
// Solidity: function pubsOfOwner(address owner) view returns(string[])
func (_Contract *ContractSession) PubsOfOwner(owner common.Address) ([]string, error) {
	return _Contract.Contract.PubsOfOwner(&_Contract.CallOpts, owner)
}

// PubsOfOwner is a free data retrieval call binding the contract method 0x26294a77.
//
// Solidity: function pubsOfOwner(address owner) view returns(string[])
func (_Contract *ContractCallerSession) PubsOfOwner(owner common.Address) ([]string, error) {
	return _Contract.Contract.PubsOfOwner(&_Contract.CallOpts, owner)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Contract *ContractCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Contract *ContractSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Contract.Contract.SupportsInterface(&_Contract.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_Contract *ContractCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _Contract.Contract.SupportsInterface(&_Contract.CallOpts, interfaceId)
}

// AddDeals is a paid mutator transaction binding the contract method 0xa4de7e49.
//
// Solidity: function addDeals(string pub, (uint64,string)[] deals) returns()
func (_Contract *ContractTransactor) AddDeals(opts *bind.TransactOpts, pub string, deals []BasinStorageDealInfo) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addDeals", pub, deals)
}

// AddDeals is a paid mutator transaction binding the contract method 0xa4de7e49.
//
// Solidity: function addDeals(string pub, (uint64,string)[] deals) returns()
func (_Contract *ContractSession) AddDeals(pub string, deals []BasinStorageDealInfo) (*types.Transaction, error) {
	return _Contract.Contract.AddDeals(&_Contract.TransactOpts, pub, deals)
}

// AddDeals is a paid mutator transaction binding the contract method 0xa4de7e49.
//
// Solidity: function addDeals(string pub, (uint64,string)[] deals) returns()
func (_Contract *ContractTransactorSession) AddDeals(pub string, deals []BasinStorageDealInfo) (*types.Transaction, error) {
	return _Contract.Contract.AddDeals(&_Contract.TransactOpts, pub, deals)
}

// CreatePub is a paid mutator transaction binding the contract method 0x52b62b3e.
//
// Solidity: function createPub(address owner, string pub) returns()
func (_Contract *ContractTransactor) CreatePub(opts *bind.TransactOpts, owner common.Address, pub string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createPub", owner, pub)
}

// CreatePub is a paid mutator transaction binding the contract method 0x52b62b3e.
//
// Solidity: function createPub(address owner, string pub) returns()
func (_Contract *ContractSession) CreatePub(owner common.Address, pub string) (*types.Transaction, error) {
	return _Contract.Contract.CreatePub(&_Contract.TransactOpts, owner, pub)
}

// CreatePub is a paid mutator transaction binding the contract method 0x52b62b3e.
//
// Solidity: function createPub(address owner, string pub) returns()
func (_Contract *ContractTransactorSession) CreatePub(owner common.Address, pub string) (*types.Transaction, error) {
	return _Contract.Contract.CreatePub(&_Contract.TransactOpts, owner, pub)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Contract *ContractSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.GrantRole(&_Contract.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.GrantRole(&_Contract.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Contract *ContractSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RenounceRole(&_Contract.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RenounceRole(&_Contract.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Contract *ContractSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RevokeRole(&_Contract.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_Contract *ContractTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _Contract.Contract.RevokeRole(&_Contract.TransactOpts, role, account)
}

// ContractDealAddedIterator is returned from FilterDealAdded and is used to iterate over the raw logs and unpacked data for DealAdded events raised by the Contract contract.
type ContractDealAddedIterator struct {
	Event *ContractDealAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractDealAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractDealAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractDealAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractDealAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractDealAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractDealAdded represents a DealAdded event raised by the Contract contract.
type ContractDealAdded struct {
	DealId *big.Int
	Pub    common.Hash
	Owner  common.Address
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterDealAdded is a free log retrieval operation binding the contract event 0x204834f22022f11eeb78462cfca42c0249cae717b04eba08c0ba32426d750d70.
//
// Solidity: event DealAdded(uint256 indexed dealId, string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) FilterDealAdded(opts *bind.FilterOpts, dealId []*big.Int, pub []string, owner []common.Address) (*ContractDealAddedIterator, error) {

	var dealIdRule []interface{}
	for _, dealIdItem := range dealId {
		dealIdRule = append(dealIdRule, dealIdItem)
	}
	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "DealAdded", dealIdRule, pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return &ContractDealAddedIterator{contract: _Contract.contract, event: "DealAdded", logs: logs, sub: sub}, nil
}

// WatchDealAdded is a free log subscription operation binding the contract event 0x204834f22022f11eeb78462cfca42c0249cae717b04eba08c0ba32426d750d70.
//
// Solidity: event DealAdded(uint256 indexed dealId, string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) WatchDealAdded(opts *bind.WatchOpts, sink chan<- *ContractDealAdded, dealId []*big.Int, pub []string, owner []common.Address) (event.Subscription, error) {

	var dealIdRule []interface{}
	for _, dealIdItem := range dealId {
		dealIdRule = append(dealIdRule, dealIdItem)
	}
	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "DealAdded", dealIdRule, pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractDealAdded)
				if err := _Contract.contract.UnpackLog(event, "DealAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDealAdded is a log parse operation binding the contract event 0x204834f22022f11eeb78462cfca42c0249cae717b04eba08c0ba32426d750d70.
//
// Solidity: event DealAdded(uint256 indexed dealId, string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) ParseDealAdded(log types.Log) (*ContractDealAdded, error) {
	event := new(ContractDealAdded)
	if err := _Contract.contract.UnpackLog(event, "DealAdded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractPubCreatedIterator is returned from FilterPubCreated and is used to iterate over the raw logs and unpacked data for PubCreated events raised by the Contract contract.
type ContractPubCreatedIterator struct {
	Event *ContractPubCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractPubCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractPubCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractPubCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractPubCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractPubCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractPubCreated represents a PubCreated event raised by the Contract contract.
type ContractPubCreated struct {
	Pub   common.Hash
	Owner common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterPubCreated is a free log retrieval operation binding the contract event 0xf8debc2f1745eba86909890f2dc061624705c74329348829e04aba43c015b9a2.
//
// Solidity: event PubCreated(string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) FilterPubCreated(opts *bind.FilterOpts, pub []string, owner []common.Address) (*ContractPubCreatedIterator, error) {

	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "PubCreated", pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return &ContractPubCreatedIterator{contract: _Contract.contract, event: "PubCreated", logs: logs, sub: sub}, nil
}

// WatchPubCreated is a free log subscription operation binding the contract event 0xf8debc2f1745eba86909890f2dc061624705c74329348829e04aba43c015b9a2.
//
// Solidity: event PubCreated(string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) WatchPubCreated(opts *bind.WatchOpts, sink chan<- *ContractPubCreated, pub []string, owner []common.Address) (event.Subscription, error) {

	var pubRule []interface{}
	for _, pubItem := range pub {
		pubRule = append(pubRule, pubItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "PubCreated", pubRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractPubCreated)
				if err := _Contract.contract.UnpackLog(event, "PubCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePubCreated is a log parse operation binding the contract event 0xf8debc2f1745eba86909890f2dc061624705c74329348829e04aba43c015b9a2.
//
// Solidity: event PubCreated(string indexed pub, address indexed owner)
func (_Contract *ContractFilterer) ParsePubCreated(log types.Log) (*ContractPubCreated, error) {
	event := new(ContractPubCreated)
	if err := _Contract.contract.UnpackLog(event, "PubCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the Contract contract.
type ContractRoleAdminChangedIterator struct {
	Event *ContractRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractRoleAdminChanged represents a RoleAdminChanged event raised by the Contract contract.
type ContractRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Contract *ContractFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*ContractRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &ContractRoleAdminChangedIterator{contract: _Contract.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Contract *ContractFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *ContractRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractRoleAdminChanged)
				if err := _Contract.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_Contract *ContractFilterer) ParseRoleAdminChanged(log types.Log) (*ContractRoleAdminChanged, error) {
	event := new(ContractRoleAdminChanged)
	if err := _Contract.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the Contract contract.
type ContractRoleGrantedIterator struct {
	Event *ContractRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractRoleGranted represents a RoleGranted event raised by the Contract contract.
type ContractRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*ContractRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &ContractRoleGrantedIterator{contract: _Contract.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *ContractRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractRoleGranted)
				if err := _Contract.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) ParseRoleGranted(log types.Log) (*ContractRoleGranted, error) {
	event := new(ContractRoleGranted)
	if err := _Contract.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the Contract contract.
type ContractRoleRevokedIterator struct {
	Event *ContractRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractRoleRevoked represents a RoleRevoked event raised by the Contract contract.
type ContractRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*ContractRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &ContractRoleRevokedIterator{contract: _Contract.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *ContractRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _Contract.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractRoleRevoked)
				if err := _Contract.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_Contract *ContractFilterer) ParseRoleRevoked(log types.Log) (*ContractRoleRevoked, error) {
	event := new(ContractRoleRevoked)
	if err := _Contract.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
